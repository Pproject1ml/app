plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    // dotenv package 를 통해서 key 가져오기 위한 android 설정
    def dotenv = new Properties()
    def envFile = file("${rootProject.projectDir}/../assets/config/.env")
    if(envFile.exists()){
        envFile.withInputStream { stream -> dotenv.load(stream)}
    }
    else{
        throw new FileNotFoundException("could not find .env")
    }
    // -------------------------------------------------------------------
    namespace = "com.example.chat_location"
    // 위치 정보 geolocator 설정 34
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.chat_location"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion = 21               
        targetSdkVersion = 30
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // dotenv package 를 통해서 key 가져오기 위한 android 설정
        def kakaoKey = dotenv['KAKAO_NATIVE_APP_KEY']
        def googleMapsKey = dotenv['GOOGLE_MAP_API_KEY']
        if (kakaoKey == null || googleMapsKey == null) {
            throw new GradleException("KAKAO_NATIVE_APP_KEY or GOOGLE_MAP_KEY not found in .env file")
        }
        manifestPlaceholders["GOOGLE_MAP_API_KEY"] =  googleMapsKey
        manifestPlaceholders["YOUR_NATIVE_APP_KEY"] =  kakaoKey
        // manifestPlaceholders += [ GOOGLE_MAP_API_KEY:googleMapsKey]
        // -------------------------------------------------------------------
    }
 
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

